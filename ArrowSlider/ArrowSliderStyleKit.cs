//
//  ArrowSliderStyleKit.cs
//  Fcaico.Controls.ArrowSlider
//
//  Created by Frank Caico on 12/19/14.
//  Copyright (c) 2014 YuFit. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



using System;
using CoreGraphics;
using Foundation;
using UIKit;
using CoreGraphics;

namespace Fcaico.Controls.ArrowSlider
{
    [Register ("ArrowSliderStyleKit")]
    public class ArrowSliderStyleKit : NSObject
    {
        // Initialization

        static ArrowSliderStyleKit()
        {
        }

        //// Drawing Methods

        public static void DrawArrowSlider(UIColor fillColor, UIColor outlineColor, float outlinePadding, float outlineThickness, nfloat percentFull, CGPoint position, CGSize overallSize)
        {
            outlinePadding = 1.0f;
            // General Declarations
            var context = UIGraphics.GetCurrentContext();

            // Variable Declarations
            var sizeOfFill = new CGSize(percentFull * (overallSize.Width - (overallSize.Height / 2.0f)) + (overallSize.Height / 2.0f), overallSize.Height);

            // Outline Drawing
            CGRect outlineRect = new CGRect(position.X, position.Y, overallSize.Width, overallSize.Height);
            context.SaveState();
            context.ClipToRect(outlineRect);
            context.TranslateCTM(outlineRect.X, outlineRect.Y);

            ArrowSliderStyleKit.DrawArrowOutline(new CGRect(0.0f + (outlineThickness / 2.0f), 0.0f + (outlineThickness / 2.0f), outlineRect.Width - outlineThickness, outlineRect.Height - outlineThickness), outlinePadding, outlineThickness, outlineColor);
            context.RestoreState();


            // Fill Drawing
            CGRect fillRect = new CGRect(position.X + outlineThickness, position.Y, sizeOfFill.Width, sizeOfFill.Height);
            context.SaveState();
            context.ClipToRect(fillRect);
            context.TranslateCTM(fillRect.X, fillRect.Y);

            ArrowSliderStyleKit.DrawArrowFill(new CGRect(0.0f, 0.0f, fillRect.Width, fillRect.Height), outlinePadding, fillColor);
            context.RestoreState();
        }

        public static void DrawArrowFill(CGRect frameFill, float outlinePadding, UIColor fillColor)
        {

            // FillShape Drawing
            UIBezierPath fillShapePath = new UIBezierPath();
            fillShapePath.MoveTo(new CGPoint(frameFill.GetMinX() + outlinePadding, frameFill.GetMaxY() - outlinePadding));
            fillShapePath.AddLineTo(new CGPoint(frameFill.GetMaxX() - (frameFill.Height / 2.0f), frameFill.GetMaxY() - outlinePadding));
            fillShapePath.AddLineTo(new CGPoint(frameFill.GetMaxX() - outlinePadding, frameFill.GetMinY() + 0.50000f * frameFill.Height));
            fillShapePath.AddLineTo(new CGPoint(frameFill.GetMaxX() - (frameFill.Height / 2.0f), frameFill.GetMinY() + outlinePadding));
            fillShapePath.AddLineTo(new CGPoint(frameFill.GetMinX() + outlinePadding, frameFill.GetMinY() + outlinePadding));
            fillShapePath.AddLineTo(new CGPoint(frameFill.GetMinX() + outlinePadding, frameFill.GetMaxY() - outlinePadding));
            fillShapePath.ClosePath();
            fillColor.SetFill();
            fillShapePath.Fill();
        }

        public static void DrawArrowOutline(CGRect frameOutline, float outlinePadding, float outlineThickness, UIColor outlineColor)
        {
            // OutlineShape Drawing
            UIBezierPath outlineShapePath = new UIBezierPath();
            outlineShapePath.MoveTo(new CGPoint(frameOutline.GetMinX() + outlinePadding, frameOutline.GetMaxY() - outlinePadding));
            outlineShapePath.AddLineTo(new CGPoint(frameOutline.GetMaxX() - (frameOutline.Height / 2.0f), frameOutline.GetMaxY() - outlinePadding));
            outlineShapePath.AddLineTo(new CGPoint(frameOutline.GetMaxX() - outlinePadding, frameOutline.GetMinY() + 0.50000f * frameOutline.Height));
            outlineShapePath.AddLineTo(new CGPoint(frameOutline.GetMaxX() - (frameOutline.Height / 2.0f), frameOutline.GetMinY() + outlinePadding));
            outlineShapePath.AddLineTo(new CGPoint(frameOutline.GetMinX() + outlinePadding, frameOutline.GetMinY() + outlinePadding));
            outlineShapePath.AddLineTo(new CGPoint(frameOutline.GetMinX() + outlinePadding, frameOutline.GetMaxY() - outlinePadding));
            outlineShapePath.ClosePath();

            outlineColor.SetStroke();

            outlineShapePath.LineWidth = outlineThickness;
            outlineShapePath.Stroke();
        }

    }
}
